<?xml version="1.0" encoding="UTF-8"?>
<proxy name="ECC2Klarna_Billing" startOnLoad="true" statistics="enable" trace="enable" transports="http https" xmlns="http://ws.apache.org/ns/synapse">
    <target>
        <inSequence>
            <sequence key="SQ_COMMON_REQUEST"/>
            <log level="custom">
                <property name="msg" value="ECC2Klarna_Billing: start.."/>
            </log>
            <property name="search.var.seq_address" scope="default" type="STRING" value="gov:/repository/services/All_File_Temp/ECC2Klarna_Billing/variables/global.var.start_seq_num"/>
            <property expression="get-property('registry',$ctx:search.var.seq_address)" name="search.var.start_seq_num" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
            <property name="search.var.offset" scope="default" type="STRING" value="10"/>
            <log level="custom">
                <property name="msg" value="ECC2Klarna_Billing: get data from ECC. "/>
            </log>
            <payloadFactory media-type="xml">
                <format>
                    <bapirfc name="ZSD_CAPTURE_REFUND" xmlns="">
                        <import>
                            <field name="ZSEQC_NUM">$1</field>
                            <field name="OFFSET">$2</field>
                        </import>
                    </bapirfc>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:search.var.start_seq_num"/>
                    <arg evaluator="xml" expression="$ctx:search.var.offset"/>
                </args>
            </payloadFactory>
            <call>
                <endpoint key="SAP_ECQ_RFC"/>
            </call>
            <log level="full">
                <property name="msg" value="ECC2Klarna_Billing: split the request info . "/>
            </log>
            <property expression="count(//item)" name="request.var.josn_payload_size" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
            <log level="custom">
                <property expression="concat('ECC2Klarna_Billing: item count = ',$ctx:request.var.josn_payload_size)" name="msg"/>
            </log>
            <filter regex="true" source="$ctx:request.var.josn_payload_size &lt; 1">
                <then>
                    <call-template target="TP_COMMON_SUCCESS_HANDLER">
                        <with-param name="successdesc" value="no data need post to be deal with  ."/>
                        <with-param name="savepayload" value="false"/>
                    </call-template>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="200"/>
                    <respond/>
                </then>
                <else/>
            </filter>
            <property expression="//item[last()]/ZSEQC_NUM" name="search.var.end_seq_num" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
            <log level="custom">
                <property expression="concat('ECC2Klarna_Billing: end_seq_num = ',$ctx:search.var.end_seq_num)" name="msg"/>
            </log>
            <script language="js"><![CDATA[var seq_num = mc.getProperty("search.var.end_seq_num");
         var seq_address = mc.getProperty("search.var.seq_address");
         if(seq_num != null) {
            mc.getConfiguration().getRegistry().updateResource(seq_address.toString(),seq_num.toString());
         }]]></script>
            <iterate attachPath="//ZSDT_KLARNA_REQUEST" continueParent="true" expression="//ZSDT_KLARNA_REQUEST/item" id="one" preservePayload="true" sequential="true" xmlns:dat="http://ws.wso2.org/dataservice">
                <target>
                    <sequence>
                        <log level="full"/>
                        <script language="js"><![CDATA[var xmldata =  mc.getPayloadXML();
	 var klarnaRequest = "";
	 var capture_am =  xmldata..item..*::ZCAPTURE_AM.toString();
	 var refund_am =  xmldata..item..*::ZREFUND_AM.toString();

	 var order_id = xmldata..item..*::ZKLARNA_ID.toString();
	
	 if(order_id != null && !"".equals(order_id.toString())) {
             mc.setProperty("uri.var.order_id",order_id);
            if( capture_am != null && !"".equals(capture_am.toString()) && new Number(capture_am) > 0){
              mc.setProperty("request.var.type","capture");
               klarnaRequest = "{\"captured_amount\":" +capture_am.toString()+"}";
            }else if( refund_am != null && !"".equals(refund_am.toString()) && new Number(refund_am) > 0){
            
              mc.setProperty("request.var.type","refund");
              klarnaRequest = "{\"refunded_amount\":" + refund_am.toString()+"}";
            
            }
         }
        var seq_num = xmldata..item..*::ZSEQC_NUM;
         if(seq_num != null && !"".equals(seq_num.toString())) {
            mc.setProperty("search.var.end_seq_num",seq_num);
             mc.setProperty("response.var.seqno",seq_num);
         }
       mc.setProperty("response.var.debug","ECC2Klarna_Billing uri.var.order_id="+order_id+";capture_am="+capture_am+";seq_num="+seq_num+";refund_am="+refund_am+";klarnaRequest="+klarnaRequest);
       mc.setPayloadJSON(klarnaRequest.toString());]]></script>
                        <log level="custom">
                            <property expression="$ctx:response.var.debug" name="msg" xmlns:ns="http://org.apache.synapse/xsd"/>
                        </log>
                        <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                        <log level="custom">
                            <property name="msg" value="ECC2Klarna_Billing start to call Klarna . "/>
                        </log>
                        <property expression="fn:concat('Basic ', base64Encode('N100158:pohju*xu5Xe&amp;s2aL'))" name="Authorization" scope="transport" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
                        <filter regex="refund" source="$ctx:request.var.type" xmlns:ns="http://org.apache.synapse/xsd">
                            <then>
                                <log level="custom">
                                    <property name="msg" value="ECC2Klarna_Billing CreateRefund ."/>
                                </log>
                                <send>
                                    <endpoint key="EX_Klarna_CreateRefund"/>
                                </send>
                            </then>
                            <else>
                                <log level="custom">
                                    <property name="msg" value="ECC2Klarna_Billing CreateCapture ."/>
                                </log>
                                <send>
                                    <endpoint key="EX_Klarna_CreateCapture"/>
                                </send>
                            </else>
                        </filter>
                    </sequence>
                </target>
            </iterate>
        </inSequence>
        <outSequence>
            <log level="full">
                <property name="msg" value="ECC2Klarna_Billing get response from Klarna . "/>
            </log>
            <property expression="$trp:Refund-Id" name="response.var.refundoid" scope="default" type="STRING"/>
            <log level="custom">
                <property expression="$ctx:response.var.refundoid" name="response.var.refundoid"/>
            </log>
            <property expression="$trp:Capture-Id" name="response.var.captureoid" scope="default" type="STRING"/>
            <log level="custom">
                <property expression="$ctx:response.var.captureoid" name="response.var.captureoid"/>
            </log>
            <property expression="$axis2:HTTP_SC" name="response.var.sc" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
            <property expression="//error_code" name="response.var.errorcode" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
            <filter regex="true" source="count(//error_messages) > 0" xmlns:ns="http://org.apache.synapse/xsd">
                <then>
                    <property expression="//error_messages" name="response.var.errormsg" scope="default" type="STRING"/>
                </then>
                <else>
                    <filter xmlns:a="http://ws.apache.org/commons/ns/payload" xmlns:ns2="http://org.apache.synapse/xsd" xpath="//a:binary">
                        <then>
                            <property expression="//a:binary" name="response.var.errormsg" scope="default" type="STRING"/>
                        </then>
                        <else/>
                    </filter>
                </else>
            </filter>
            <property expression="//correlation_id" name="response.var.relationid" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
            <switch source="string($ctx:response.var.sc)" xmlns:ns="http://org.apache.synapse/xsd">
                <case regex="201">
                    <property name="response.var.errormsg" scope="default" type="STRING" value=""/>
                    <property expression="concat($ctx:request.var.type,' created')" name="response.var.desc" scope="default" type="STRING"/>
                    <log level="custom">
                        <property name="msg" value="ECC2Klarna_Billing success to send data to Klarna ."/>
                    </log>
                </case>
                <case regex="401">
                    <log level="custom">
                        <property name="msg" value="ECC2Klarna_Billing 401 error when sending data to Klarna ."/>
                    </log>
                </case>
                <case regex="403">
                    <log level="custom">
                        <property name="msg" value="ECC2Klarna_Billing 403 error when sending data to Klarna ."/>
                    </log>
                </case>
                <case regex="404">
                    <log level="custom">
                        <property name="msg" value="ECC2Klarna_Billing 404 error when sending data to Klarna ."/>
                    </log>
                </case>
                <default>
                    <log level="custom">
                        <property name="msg" value="ECC2Klarna_Billing unknown error when sending data to Klarna ."/>
                    </log>
                </default>
            </switch>
            <payloadFactory media-type="xml">
                <format>
                    <bapirfc name="ZSD_KLARNA_RESPONSE" xmlns="">
                        <tables>
                            <table name="ZSDT_CAPTURE_RESPONSE">
                                <row id="0">
                                    <field name="ZSEQC_NUM">$1</field>
                                    <field name="ZRESPOSE_DES">$2</field>
                                    <field name="ZRESPOSE_SC">$3</field>
                                    <field name="ZCAPTURE_ID">$4</field>
                                    <field name="ZREFUND_ID">$5</field>
                                    <field name="ZERROR_CODE">$6</field>
                                    <field name="ZERROR_MESSAGE">$7</field>
                                    <field name="ZCORRELATION_ID">$8</field>
                                </row>
                            </table>
                        </tables>
                    </bapirfc>
                </format>
                <args>
                    <arg evaluator="xml" expression="$ctx:response.var.seqno" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.desc" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.sc" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.captureoid" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.refundoid" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.errorcode" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.errormsg" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <arg evaluator="xml" expression="$ctx:response.var.relationid" xmlns:ns="http://org.apache.synapse/xsd"/>
                </args>
            </payloadFactory>
            <log level="full">
                <property name="msg" value="ECC2Klarna_Billing created single ECC request . "/>
            </log>
            <aggregate id="one">
                <completeCondition>
                    <messageCount max="-1" min="-1"/>
                </completeCondition>
                <onComplete expression="$body/*">
                    <log level="custom">
                        <property name="msg" value="ECC2Klarna_Billing:  end "/>
                    </log>
                    <payloadFactory media-type="xml">
                        <format>
                            <payload xmlns="">$1</payload>
                        </format>
                        <args>
                            <arg evaluator="xml" expression="$body/*"/>
                        </args>
                    </payloadFactory>
                    <xslt key="gov:/repository/services/All_File_Temp/ECC2Klarna_Billing/modules/default/transform/request.xslt"/>
                    <call>
                        <endpoint key="SAP_ECQ_RFC"/>
                    </call>
                    <property expression="count(//item)" name="response.var.josn_payload_size" scope="default" type="STRING" xmlns:ns="http://org.apache.synapse/xsd"/>
                    <log level="full">
                        <property expression="concat('ECC2Klarna_Billing: response item count = ',$ctx:response.var.josn_payload_size)" name="msg"/>
                    </log>
                    <filter regex="true" source="$ctx:request.var.josn_payload_size > 0">
                        <then>
                            <call-template target="TP_COMMON_SUCCESS_HANDLER">
                                <with-param name="successdesc" value="feekback ECC successfully."/>
                                <with-param name="savepayload" value="false"/>
                            </call-template>
                            <property name="HTTP_SC" scope="axis2" type="STRING" value="500"/>
                        </then>
                        <else>
                            <call-template target="TP_COMMON_FAULT_HANDLER">
                                <with-param name="statuscode" value="203"/>
                            </call-template>
                            <call-template target="TP_COMMON_SET_RESPONSE_HEADER"/>
                        </else>
                    </filter>
                    <respond/>
                </onComplete>
            </aggregate>
        </outSequence>
        <faultSequence>
            <log level="custom">
                <property name="msg" value="ECC2Klarna_Billing: faultSequence."/>
            </log>
            <call-template target="TP_COMMON_FAULT_HANDLER">
                <with-param name="statuscode" value="203"/>
            </call-template>
            <call-template target="TP_COMMON_SET_RESPONSE_HEADER"/>
            <respond/>
        </faultSequence>
    </target>
</proxy>
